# Generated by Django 5.0.1 on 2024-02-19 09:36

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Empleado',
            fields=[
                ('cod_empl', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('tipo_cedula_empl', models.CharField(max_length=2)),
                ('cedula_empl', models.CharField(max_length=8, unique=True, validators=[django.core.validators.MinLengthValidator(7)], verbose_name='Cedula')),
                ('nombre_empl', models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nombre')),
                ('apellido_empl', models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Apellido')),
                ('tipo_telefono_empl', models.CharField(max_length=5)),
                ('telefono_empl', models.CharField(max_length=7, validators=[django.core.validators.MinLengthValidator(7)], verbose_name='Telefono')),
                ('direccion_exacta', models.TextField(verbose_name='Dirección')),
                ('cargo', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Cargo')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
                'ordering': ['cedula_empl'],
            },
        ),
        migrations.CreateModel(
            name='Laboratorio',
            fields=[
                ('id_laboratorio', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('nombre_laboratorio', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Laboratorio',
                'verbose_name_plural': 'Laboratorios',
                'ordering': ['nombre_laboratorio'],
            },
        ),
        migrations.CreateModel(
            name='Lote',
            fields=[
                ('id_lote', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('lote', models.CharField(max_length=60, verbose_name='Lote')),
                ('canti_pro', models.CharField(max_length=4, verbose_name='Cantidad del Producto')),
                ('fecha_lote', models.DateField(auto_now=True, verbose_name='Fecha del Lote')),
            ],
            options={
                'verbose_name': 'Lote',
                'verbose_name_plural': 'Lotes',
                'ordering': ['lote'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('cod_pac', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('tipo_cedula_pac', models.CharField(max_length=2)),
                ('cedula_pac', models.CharField(max_length=8, unique=True, validators=[django.core.validators.MinLengthValidator(7)], verbose_name='Cedula')),
                ('nombre_pac', models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nombre')),
                ('apellido_pac', models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Apellido')),
                ('tipo_telefono_pac', models.CharField(max_length=5)),
                ('telefono_pac', models.CharField(max_length=7, validators=[django.core.validators.MinLengthValidator(7)], verbose_name='Telefono')),
                ('email_pac', models.EmailField(max_length=100, unique=True, verbose_name='Correo electrónico')),
                ('cargo_pac', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Cargo')),
                ('sexo_pac', models.CharField(max_length=10, verbose_name='Sexo')),
                ('fecha_nacimiento_pac', models.DateField(verbose_name='Fecha de nacimiento')),
                ('embarazada', models.CharField(blank=True, max_length=2, null=True, verbose_name='Embarazada')),
                ('constancia_residencia', models.FileField(max_length=200, upload_to='constancias_residencia/', verbose_name='Constancia de Residencia')),
                ('username_pac', models.CharField(max_length=100, unique=True, verbose_name='Nombre de usuario')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'ordering': ['cedula_pac'],
            },
        ),
        migrations.CreateModel(
            name='Representante',
            fields=[
                ('cod_repr', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('tipo_cedula_repr', models.CharField(max_length=2)),
                ('cedula_repr', models.CharField(max_length=8, unique=True, validators=[django.core.validators.MinLengthValidator(7)], verbose_name='Cedula')),
                ('nombre_repr', models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nombre')),
                ('apellido_repr', models.CharField(max_length=15, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Apellido')),
                ('parentesco', models.CharField(max_length=20)),
            ],
            options={
                'verbose_name': 'Representante',
                'verbose_name_plural': 'Representantes',
                'ordering': ['cedula_repr'],
            },
        ),
        migrations.CreateModel(
            name='Tipo_insumo',
            fields=[
                ('id_tipo_insumo', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('nombre_tipo_insumo', models.CharField(max_length=60, verbose_name='Tipo del Insumo')),
            ],
            options={
                'verbose_name': 'Tipo de insumo',
                'verbose_name_plural': 'Tipo de insumos',
                'ordering': ['nombre_tipo_insumo'],
            },
        ),
        migrations.CreateModel(
            name='Tipo_mov',
            fields=[
                ('tipo_mov', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('descripcion', models.TextField(verbose_name='Descripción del Movimiento')),
            ],
            options={
                'verbose_name': 'Tipo de Movimiento',
                'verbose_name_plural': 'Tipos de Movimientos',
                'ordering': ['descripcion'],
            },
        ),
        migrations.CreateModel(
            name='Ubicacion',
            fields=[
                ('id_zona', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('ubicacion', models.CharField(max_length=60, verbose_name='Ubicación')),
            ],
            options={
                'verbose_name': 'Ubicación',
                'verbose_name_plural': 'Ubicaciones',
                'ordering': ['ubicacion'],
            },
        ),
        migrations.CreateModel(
            name='Zona',
            fields=[
                ('id_zona', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('zona_residencia', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Zona',
                'verbose_name_plural': 'Zonas',
                'ordering': ['zona_residencia'],
            },
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id_producto', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo del Producto')),
                ('nombre_producto', models.CharField(max_length=40, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nombre del Producto')),
                ('limite', models.CharField(max_length=3, verbose_name='Limite por parciente')),
                ('stock_max', models.CharField(max_length=5, verbose_name='Stock maxino')),
                ('stock_min', models.CharField(max_length=5, verbose_name='Stock minimo')),
                ('id_laboratorio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.laboratorio', verbose_name='Laboratorio')),
                ('id_lote', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.lote', verbose_name='Lote')),
                ('id_tipo_insumo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.tipo_insumo', verbose_name='Tipo de insumo')),
                ('id_ubicacion', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.ubicacion', verbose_name='Ubicación')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'ordering': ['nombre_producto'],
            },
        ),
        migrations.CreateModel(
            name='Factura',
            fields=[
                ('cod_fac', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('fecha_fac', models.DateField(auto_now=True, verbose_name='Fecha de la Factura')),
                ('descripcion', models.TextField(verbose_name='Descripción de la Factura')),
                ('cantidad', models.CharField(max_length=3, verbose_name='Cantidad del Producto')),
                ('cod_empl', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.empleado', verbose_name='Empleado')),
                ('cod_pac', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.paciente', verbose_name='Paciente')),
                ('id_producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.producto', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Factura',
                'verbose_name_plural': 'Facturas',
                'ordering': ['fecha_fac'],
            },
        ),
        migrations.AddField(
            model_name='paciente',
            name='cod_repr',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='Project.representante', verbose_name='Representante'),
        ),
        migrations.CreateModel(
            name='Solicitud',
            fields=[
                ('id_soli', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo del Producto')),
                ('fecha_soli', models.DateField(auto_now=True, verbose_name='Fecha de la Solicitud')),
                ('descripcion_soli', models.TextField(verbose_name='Descripción de la Solicitud')),
                ('cantidad', models.CharField(max_length=3, verbose_name='Cantidad del Producto')),
                ('recipe', models.FileField(max_length=200, upload_to='recipes/', verbose_name='Recipe')),
                ('cod_pac', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.paciente', verbose_name='Paciente')),
                ('id_producto', models.ManyToManyField(to='Project.producto', verbose_name='Producto')),
            ],
            options={
                'verbose_name': 'Solicitud de Medicamento',
                'verbose_name_plural': 'Solicitud de Medicamentos',
                'ordering': ['fecha_soli'],
            },
        ),
        migrations.CreateModel(
            name='Movimiento_inventario',
            fields=[
                ('id_mov', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('fecha_mov', models.DateField(auto_now=True, verbose_name='Fecha del Movimiento')),
                ('motivo_mov', models.TextField(verbose_name='Motivo del Movimiento')),
                ('cantidad', models.CharField(max_length=3, verbose_name='cantidad del Producto')),
                ('cod_empl', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.empleado', verbose_name='Empleado')),
                ('id_producto', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.producto', verbose_name='Producto')),
                ('tipo_mov', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.tipo_mov', verbose_name='Tipo de Movimiento')),
            ],
            options={
                'verbose_name': 'Movimiento de Inventario',
                'verbose_name_plural': 'Movimientos de Inventario',
                'ordering': ['fecha_mov'],
            },
        ),
        migrations.AddField(
            model_name='paciente',
            name='id_zona',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Project.zona', verbose_name='Zona'),
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('cod_usuario', models.AutoField(primary_key=True, serialize=False, verbose_name='Codigo')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Nombre de usuario')),
                ('nombre', models.CharField(max_length=16, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Nombre')),
                ('apellido', models.CharField(max_length=16, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Apellido')),
                ('email', models.EmailField(max_length=100, unique=True, verbose_name='Correo electrónico')),
                ('cargo', models.CharField(max_length=30, validators=[django.core.validators.MinLengthValidator(2)], verbose_name='Cargo')),
                ('imagen', models.ImageField(blank=True, null=True, upload_to='perfil/', verbose_name='Foto de perfil')),
                ('intentos_fallidos', models.PositiveIntegerField(default=0)),
                ('cuenta_bloqueada', models.BooleanField(default=False)),
                ('paciente', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Project.paciente')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
